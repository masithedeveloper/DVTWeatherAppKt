// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.50'
    repositories {
        google()
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.google.gms:google-services:4.3.2'
        classpath 'com.android.tools.build:gradle:4.0.0-alpha05'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.1.0"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

configurations.all {
    resolutionStrategy {
        force 'androidx.legacy:legacy-support-v4:1.0.0'
    }
}

allprojects {
    repositories {
        jcenter()
        google()
        mavenCentral()
    }
}

ext {

    buildToolsVersion = '29.0.1'
    compileSdkVersion = 29
    targetSdkVersion = 29
    minSdkVersion = 21

    support_version = '1.0.0'
    appCompatVersion = '1.1.0-beta01'
    rxJavaVersion = '2.1.14'
    rxKotlinVersion = '2.2.0'
    rxAnimationsVersion = '0.0.6'
    timberVersion = '4.7.0'
    daggerVersion = '2.23.2'
    retrofitVersion = '2.5.0'
    okHttpVersion = '3.14.1'
    picassoVersion = '2.71828'
    lifecycle_version = "1.1.1"
    coroutines_version = "1.2.0"
    anko_version = "0.10.8"
    navigationVersion = "2.1.0"
    threetenabpVersion = "1.2.0"
    stethoVersion = "1.5.1"
    legacySupportv4Version = "1.0.0"
    lifecycleViewModelKtxVersion = "2.0.0"
    lifecycleVersion = "2.0.0"
    roomVersion = "2.1.0"
    dataBindingVersion = "3.5.1"
    shadowViewVersion = "0.0.3"
    firebaseCoreVersion = "17.0.1"
    firebaseDatabaseVersion = "18.0.0"
    firebaseMessagingVersion = "20.0.0"
    algoliaVersion = "3.+"
    moshiConverterVersion = "2.6.2"
    moshiVersion = "1.9.2"
    coreTestingVersion = "2.0.0"
    mockKVersion = "1.9.3"
    truthExtVersion = "1.3.0-alpha01"
    truthVersion = "1.0"
    androidxTestRunnerVersion = "1.3.0-alpha01"
    espressoCoreVersion = "3.3.0-alpha01"
    junitVersion = "4.12"
    junitExtVersion = "1.1.1"
    robolectricVersion = "4.3.1"

    //Testing
    junit =  "junit:junit:$junitVersion"
    androidxTestRunner =  "androidx.test:runner:$androidxTestRunnerVersion"
    androidxTestRules = "androidx.test:rules:$androidxTestRunnerVersion"
    junitTestExt = "androidx.test.ext:junit-ktx:$junitExtVersion"
    espressoCore = "androidx.test.espresso:espresso-core:$espressoCoreVersion"
    truth =  "com.google.truth:truth:$truthVersion"
    truthExt = "androidx.test.ext:truth:$truthExtVersion"
    mockK = "io.mockk:mockk:$mockKVersion"
    coreTesting = "androidx.arch.core:core-testing:$coreTestingVersion"
    robolectric =  "org.robolectric:robolectric:$robolectricVersion"

    //supportLib
    supportv4 = "androidx.legacy:legacy-support-v4:$support_version"
    appCompat = "androidx.appcompat:appcompat:$appCompatVersion"
    materialDesign = "com.google.android.material:material:$support_version"
    recyclerView = "androidx.recyclerview:recyclerview:$support_version"
    cardView = "androidx.cardview:cardview:$support_version"
    coreKtx = 'androidx.core:core-ktx:1.2.0-alpha01'

    //rx
    rxJava = "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    rxAndroid = "io.reactivex.rxjava2:rxandroid:2.0.1"
    rxKotlin = "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"
    rxAnimations = "com.mikhaellopez:rxanimation:$rxAnimationsVersion"

    //arch-comp Lifecycles, LiveData, and ViewModel
    lifecycleExt = "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    lifecycleAnnotation = "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"
    lifecycleViewModelKtx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleViewModelKtxVersion"

    //firebase
    firebaseCore = "com.google.firebase:firebase-core:$firebaseCoreVersion"
    firebaseDatabase = "com.google.firebase:firebase-database:$firebaseDatabaseVersion"
    firebaseMessaging = "com.google.firebase:firebase-messaging:$firebaseMessagingVersion"

    //algolia
    algolia = "com.algolia:algoliasearch-android:$algoliaVersion"

    //navigation
    navigationFragment = 'androidx.navigation:navigation-fragment-ktx:2.0.0-rc02'
    navigationUI = 'androidx.navigation:navigation-ui-ktx:2.0.0-rc02'

    //room
    roomRuntime = "androidx.room:room-runtime:$roomVersion"
    roomCompiler = "androidx.room:room-compiler:$roomVersion"

    //dataBinding
    dataBindingCompilerKapt = "androidx.databinding:databinding-compiler:$dataBindingVersion"
    dataBindingCompilerAnnotation = "androidx.databinding:databinding-compiler:$dataBindingVersion"

    //dagger
    dagger = "com.google.dagger:dagger-android:$daggerVersion"
    daggerSupport = "com.google.dagger:dagger-android-support:$daggerVersion"
    // if you use the support libraries
    daggerAnnotation = "com.google.dagger:dagger-android-processor:$daggerVersion"
    //for annotationProcessor
    daggerApt = "com.google.dagger:dagger-compiler:$daggerVersion"

    //net
    retrofit = "com.squareup.retrofit2:retrofit:$retrofitVersion"
    okHttp = "com.squareup.okhttp3:okhttp:$okHttpVersion"
    rxJavaAdapter = "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    moshiConverter = "com.squareup.retrofit2:converter-moshi:$moshiConverterVersion"
    moshi = "com.squareup.moshi:moshi:$moshiVersion"
    moshiKotlin = "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    moshiKapt = "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    //coroutines
    coroutinesCore = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    //anko
    anko = "org.jetbrains.anko:anko:$anko_version"
    ankoCoroutines = "org.jetbrains.anko:anko-coroutines:$anko_version"

    //picasso
    picasso = "com.squareup.picasso:picasso:$picassoVersion"

    //threetenabp
    threetenabp = "com.jakewharton.threetenabp:threetenabp:$threetenabpVersion"

    //shadowView
    shadowView = "com.loopeer.lib:shadow:$shadowViewVersion"

    //timber
    timber = "com.jakewharton.timber:timber:$timberVersion"

    //stetho
    stethoCore = "com.facebook.stetho:stetho:$stethoVersion"
    stethoOkHttp = "com.facebook.stetho:stetho-okhttp3:$stethoVersion"
    stethoUrlConnection = "com.facebook.stetho:stetho-urlconnection:$stethoVersion"

    buildTime = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
